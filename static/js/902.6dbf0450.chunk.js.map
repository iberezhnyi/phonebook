{"version":3,"file":"static/js/902.6dbf0450.chunk.js","mappings":"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","sources":["pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterGroup = styled.div`\n  margin: 0;\n  padding: 16px 40px;\n  /* text-align: center; */\n\n  @media screen and (min-width: 768px) {\n    text-align: center;\n  }\n`;\n\nexport const RegisterTitle = styled.h2`\n  margin: 0 0 8px 0;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const Form = styled.form`\n  /* width: 400px; */\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 16px;\n  padding: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const LabelField = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* align-items: center; */\n  margin-bottom: 16px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.2;\n\n  @media screen and (min-width: 768px) {\n    align-items: center;\n    flex-direction: row;\n  }\n`;\n\nexport const LabelName = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const InputField = styled.input`\n  padding: 16px;\n  font-size: 16px;\n  line-height: 1.2;\n  border: 1px solid #35363a;\n  border-radius: 8px;\n  /* width: 284px; */\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 284px;\n  }\n`;\n\nexport const ButtonAdding = styled.button`\n  padding: 8px 24px;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  border: 1px solid;\n  border-radius: 8px;\n  cursor: pointer;\n  background: #35363a;\n  color: honeydew;\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    border-color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: #35363a;\n    border: 1px solid;\n    transform: scale(1.1);\n  }\n`;\n","import { publicApi } from '../../api/api';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authLoginThunk } from '../../redux/auth/auth.thunk';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport {\n  RegisterGroup,\n  RegisterTitle,\n  Form,\n  LabelField,\n  InputField,\n  ButtonAdding,\n  LabelName,\n} from './Register.styled';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [values, setValues] = useState(initialState);\n  // const [isPassword, setIsPassword] = useState(true);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // console.log(values);\n\n    try {\n      setIsLoading(true);\n      await publicApi.post('users/register', values);\n      await dispatch(\n        authLoginThunk({ email: values.email, password: values.password })\n      ).unwrap();\n\n      setIsLoading(false);\n\n      toast.success('Welcome to Your Phonebook!');\n\n      setValues(initialState);\n    } catch (error) {\n      console.log(error);\n      toast.error(\n        `Something went wrong! ${\n          error?.response?.data?.message || error?.message\n        }`\n      );\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <RegisterGroup>\n      {isLoading && <Loader />}\n\n      <RegisterTitle>Please Sign up</RegisterTitle>\n\n      <Form onSubmit={handleSubmit}>\n        <LabelField>\n          <LabelName>Name</LabelName>\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            value={values.name}\n            onChange={handleInputChange}\n          />\n        </LabelField>\n\n        <LabelField>\n          <LabelName>Email</LabelName>\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            required\n            autoComplete=\"off\"\n            placeholder=\"name@email.com\"\n            value={values.email}\n            onChange={handleInputChange}\n          />\n        </LabelField>\n\n        <LabelField>\n          <LabelName>Password</LabelName>\n          <InputField\n            // type={isPassword ? \"password\" : \"text\"}\n            type=\"password\"\n            name=\"password\"\n            required\n            autoComplete=\"off\"\n            placeholder=\"Name123456\"\n            value={values.password}\n            onChange={handleInputChange}\n          />\n        </LabelField>\n\n        {/* <ButtonAdding type=\"button\" onClick={() => setIsPassword(prev => !prev)}>Show Password</ButtonAdding> */}\n        <ButtonAdding type=\"submit\">Sign up</ButtonAdding>\n      </Form>\n    </RegisterGroup>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterGroup","styled","_templateObject","_taggedTemplateLiteral","RegisterTitle","_templateObject2","Form","_templateObject3","LabelField","_templateObject4","LabelName","_templateObject5","InputField","_templateObject6","ButtonAdding","_templateObject7","initialState","name","email","password","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","values","setValues","handleInputChange","event","_event$currentTarget","currentTarget","value","prev","_objectSpread","_defineProperty","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_error$response","_error$response$data","_context","next","preventDefault","publicApi","authLoginThunk","unwrap","toast","t0","console","log","concat","response","data","message","stop","_x","apply","arguments","_jsxs","children","_jsx","Loader","onSubmit","type","required","autoComplete","placeholder","onChange"],"sourceRoot":""}